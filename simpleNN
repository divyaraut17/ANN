def artificial_neuron(inputs,weights,bias):
    weighted_sum=0
    for i in range(len(inputs)):
     weighted_sum +=inputs[i] * weights[i]
     weighted_sum += bias

    output = 1 if weighted_sum > 0 else 0

    return output

inputs = [3, 6]
weights= [0.8,0.5]
bias= -1

output = artificial_neuron(inputs,weights,bias)
print("output of the artificial neuron :",output)

#AND gate
import numpy as np # Importing numpy for array operations

def step_function(x):
   if x>=0:
     return 1
   else:
     return 0

def artificial_neuron(x1,x2,weights,bias):
    weighted_sum=weights[0] *x1 + weights[1] *x2 + bias
    return step_function(weighted_sum)

# Define weights and bias outside the function
weights=np.array([1, 1])
bias=-1.5

# Define inputs outside the function
inputs=[(0,0),(0,1),(1,0),(1,1)]

# Iterate through inputs and print outputs
for x1,x2 in inputs:
    output = artificial_neuron(x1 ,x2,weights,bias)
    print(f"Input: ({x1},{x2})->output:{output}")

#OR gate
import numpy as np # Importing numpy for array operations

def step_function(x):
   if x>=0:
     return 1
   else:
     return 0

def artificial_neuron(x1,x2,weights,bias):
    weighted_sum=weights[0] *x1 + weights[1] *x2 + bias
    return step_function(weighted_sum)

# Define weights and bias outside the function
weights=np.array([2 , 2])
bias=-1

# Define inputs outside the function
inputs=[(0,0),(0,1),(1,0),(1,1)]

# Iterate through inputs and print outputs
for x1,x2 in inputs:
    output = artificial_neuron(x1 ,x2,weights,bias)
    print(f"Input: ({x1},{x2})->output:{output}")

#NOT gate
import numpy as np # Importing numpy for array operations

def step_function(x):
   if x>=0:
     return 1
   else:
     return 0

def artificial_neuron(x1,x2,weights,bias): #This function expects 4 arguments
    weighted_sum=weights[0] *x1 + bias #But only uses x1, weights and bias
    return step_function(weighted_sum)

# Define weights and bias outside the function
weights=np.array([-3])
bias=1

# Define inputs outside the function
inputs=[0,1]

# Iterate through inputs and print outputs
for x1 in inputs:
    output = artificial_neuron(x1 ,x2,weights,bias) # When calling the function, x2 is supplied but not used.
    print(f"Input: ({x1})->output:{output}") 
